
    <div style="clear:both; word-break:break-all; padding-top:20px;">
        <span></span><span></span><span><span> </span></span><span><span> 
<p>
	<span></span>我们的代码里会大量的需要各种判断。比如：如果用户没有登录，如果用户输入的密码错误，如果求助有人应答……这时候就需要使用：
</p>
</span></span>
<h3>
	<span><span> 
	<p>
		<span></span> 
	</p>
	<p>
		<span></span> 
	</p>
	<p>
		<br>
	</p>
	<p>
		if...else...
	</p>
</span></span> 
</h3>
<h3>
</h3>
<span><span> 
<p>
	<br>
</p>
<p>
	中文就是：如果（if）...否则（else）……的意思
</p>
<p>
	假设我们要判断一个数是不是正数：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="typ">int</span><span class="pln"> input </span><span class="pun">=</span><span class="pln"> </span><span class="lit">32</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">input </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"正数"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span></pre>
<p>
	<br>
</p>
<span></span>
<p>
	<br>
</p>
<p>
	<em>断点演示：程序执行流程</em>
</p>
<p>
	<em>复习：input的值由用户输入<br>
</em>
</p>
<p>
	<br>
</p>
<h4>
	<br>
</h4>
<h4>
	else
</h4>
在上述需求（大于0显示为正数）的基础上再加一个判断：小于0显示为负数。该怎么写？
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">input </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"正数"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">input </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"负数"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span></pre>
<p>
	这样写运行结果没有错，但是有一个<em> 性能 </em>上的问题：
</p>
<p>
	假设 input = 100，它通过了 input ≥ 0 的判断，输出：正数。正数就永远不可能为负数，还需要再走一次 input &lt; 0 的判断么？
</p>
<p>
	<em>断点演示：</em> 
</p>
<p>
	<em><br>
</em> 
</p>
<p>
	所以，这种情况，我们应该使用 else：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">input </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"正数"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">else</span><span class="pln">  </span><span class="com">//所有其他情况</span><span class="pln">
            </span><span class="com">//if (input &lt; 0)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"负数"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span></pre>
<span></span>
<p>
	<br>
</p>
这里的else不会进行判断：只要没有满足前面的if条件，马上就会进入else分支。
<p>
	<br>
</p>
<p>
	<em><br>
</em>
</p>
<p>
	<em><br>
</em>
</p>
<p>
	<strong>注意：</strong> 
</p>
<ul>
	<li>
		passed<em>必须</em>为bool值，即if后面圆括号（()）中要么是一个bool值变量，要么是一个结果为bool值的表达式。其他类型都不行，比如：
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln">              </span><span class="com">/*有点编程语言可以使用1和0表示true和false，C#不行*/</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">name </span><span class="pun">=</span><span class="pln"> </span><span class="str">"yezi"</span><span class="pun">)</span><span class="pln">  </span><span class="com">/*常见错误，混淆了=和==*/</span></pre>
	</li>
	<li>
		花括号中的内容如果只有一条语句，可以省略花括号（{}）。但<strong>强烈不建议</strong>！<br>
看一看这个代码
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="typ">int</span><span class="pln"> score </span><span class="pun">=</span><span class="pln"> </span><span class="lit">98</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">score </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">60</span><span class="pun">)</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"单行语句符合语法"</span><span class="pun">);</span><span class="pln">
            </span><span class="kwd">else</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"但是不推荐"</span><span class="pun">);</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"这句话就会有问题"</span><span class="pun">);</span></pre>
<strong>@想一想@</strong>：为什么？
	</li>
</ul>
<span> 
<h4>
	<br>
</h4>
<h4>
	关于else
</h4>
<p>
	if并不强制要求必须搭配else，但是飞哥<strong><span style="font-size:16px;">强烈建议</span></strong>你只要写了if，就总是要用else兜底！
</p>
<p>
	这有两个作用：
</p>
<ul>
	<li>
		逻辑更严密，用else兜底，让分支没有漏网之鱼，^_^
	</li>
	<li>
		要是else里面就没啥可做的呢？飞哥建议，让else的{}空着，或者加一个小注释//else nothing。目的只有一个：增加代码可读性。让其他人明确的知道：你是考虑到else情况的，else的时候就是不需要任何处理的。
	</li>
</ul>
</span></span></span> 
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">passed</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"恭喜！……"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="com">//else nothing</span></pre>
<span><span><span> 
<p>
	<br>
</p>
<h3>
	<p>
		<br>
	</p>
	<p>
		条件运算符
	</p>
</h3>
<h3>
</h3>
<p>
	前面的登录代码，可以“<strong>重构</strong>”成：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="kwd">string</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="str">""</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">passed</span><span class="pun">)</span><span class="pln"> </span><span class="com">/*如果通过验证*/</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                result </span><span class="pun">=</span><span class="pln"> </span><span class="str">"通过验证"</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="kwd">else</span><span class="pln"> </span><span class="com">/*否则*/</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                result </span><span class="pun">=</span><span class="pln"> </span><span class="str">"验证失败"</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">result</span><span class="pun">);</span></pre>
<p>
	<br>
</p>
<p>
	<span style="font-size:12px;">PS：重构，是指在不改变原有代码运行结果的情况下，对代码进行调整，</span><span style="font-size:12px;">是优化代码的最常用最有效手段。</span> 
</p>
<p>
	你可能绝对这样写还多了一个变量，多写了一行代码，^_^。目前来说是这样的，但是，假如说不是要输出一行result，而是要输出10行result呢？<strong>@想一想@</strong> 
</p>
<p>
	因为这种赋值方式如此普遍，所以C#提供了一种由问号（?）和冒号（:）组成的简写运算符。上面的代码可以简写成一句：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">&nbsp; &nbsp; </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">passed </span><span class="pun">?</span><span class="pln"> </span><span class="str">"通过验证"</span><span class="pun">:</span><span class="pln"> </span><span class="str">"验证失败"</span><span class="pun">);</span><span></span></pre>
<p>
	<br>
</p>
</span><span></span> 
<p>
	<br>
</p>
<p>
	?前面：结果为bool值的条件表达式<br>
?和:之间：当passed为true时使用的值<br>
:之后：passed为false是使用的值<br>
<span></span> 
</p>
<h3>
	else if
</h3>
<p>
	<br>
</p>
<h3>
	&nbsp;if..else嵌套
</h3>
<p>
	在if和else
</p>
<p>
	<br>
</p>
<p>
	<span><span><span><span> </span></span></span></span> 
</p>
<h3>
	<br>
</h3>
<h3>
	<span></span><br>
</h3>
</span></span> 
<h3>
	<span><span> 
	<p>
		<br>
	</p>
	<p>
		<br>
	</p>
</span></span> 
</h3>
<span><span><br>
<p>
	<em>模糊的需求</em>：
</p>
<ul>
	<li>
		60以下：不及格 fail<br>
	</li>
	<li>
		80以上：优秀 excellent
	</li>
	<li>
		60-80：及格 pass<br>
	</li>
</ul>
<em>欠缺</em><span>：</span><br>
<ul>
	<li>
		成绩范围：0 - 100
	</li>
	<li>
		边界值（60/80）如何处理？<br>
	</li>
</ul>
<p>
	<em>通过测试（举例）说明问题</em>：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="com">///test1：score = 23 =&gt; failed</span><span class="pln">
</span><span class="com">///test2: score = 65 =&gt; passed</span><span class="pln">
</span><span class="com">///test3: score = 88 =&gt; excellent</span><span class="pln">
</span><span class="com">///test4: score = 60 =&gt; passed</span><span class="pln">
</span><span class="com">///test5: score = 80 =&gt; excellent</span><span class="pln">
</span><span class="com">///test6: score = -5 =&gt; warning：input is invalid</span><span class="pln">
</span><span class="com">///test7: score = 105 =&gt; warning：input is invalid</span><span class="pln">
</span><span class="com">///test8: score = 0 =&gt; failed</span></pre>
<span>代码实现：</span> 
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="typ">int</span><span class="pln"> score </span><span class="pun">=</span><span class="pln"> </span><span class="lit">80</span><span class="pun">;</span><span class="pln">

    </span><span class="com">//先处理“非法越界”的情况</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">score </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> score </span><span class="pun">&gt;</span><span class="lit">100</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"warning..."</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">else</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="com">//注意顺序，想想为什么？</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">score </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">60</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"failed"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">score </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">80</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"passed"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">else</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"excellent"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span></pre>
</span></span> 
<h3>
	<br>
</h3>
<h3>
	作业
</h3>
<p>
	观察一起帮<a href="http://17bang.ren/Log/On" target="_blank">登录</a>页面，用if...else...完成以下功能。
</p>
<p>
	用户依次由控制台输入：验证码、用户名和密码：
</p>
<ol>
	<li>
		如果验证码输入错误，直接输出：“* 验证码错误”；
	</li>
	<li>
		如果用户名不存在，直接输出：“* 用户名不存在”；
	</li>
	<li>
		如果用户名或密码错误，输出：“* 用户名或密码错误”
	</li>
	<li>
		以上全部正确无误，输出：“恭喜！登录成功！<span></span>”<br>
	</li>
</ol>
<p>
	<span style="font-size:12px;">PS：验证码/用户名/密码直接预设在源代码中，输入由Console.ReadLine()完成。</span> 
</p>
<p>
	<img title="" class="img-responsive" alt="" src="/Images/Summary/2020/3/7/1/用户名和密码.png" data-original-title="" zyf-img=""> 
</p>
<p>
	<br>
</p>
    </div>
  