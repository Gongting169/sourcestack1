
    <div style="clear:both; word-break:break-all; padding-top:20px;">
        <p>
	<span><span><span><span></span></span>在前面的作业中，个人信息页面中有“关键字”一项，用户可以输入多个关键字，那多个关键字如何存储呢？<span></span></span></span> 
</p>
<h3>
	<br>
</h3>
<h3>
	<span></span> 
</h3>
<h3>
	一维数组
</h3>
<p>
	这是最常用的数组。之前我们把变量想象成一<strong>个</strong>盒子，那么现在数组就是一“<strong>排</strong>”盒子：
</p>
<ol>
	<li>
		<span>每一个盒子都有一个<strong>地址</strong>，获取盒子里的数据<em>（元素）</em>需要知道它的地址</span> 
	</li>
	<li>
		但数组这排盒子的地址是<strong>连续</strong>的，或者说，这一排盒子占用了一段连续的地址
	</li>
	<li>
		所以我们只需要记录<strong>第一个</strong>盒子的地址
	</li>
	<li>
		当我们要取第n个盒子里的数据，只需要在第一个盒子的地址上加n，就能<strong>直接</strong>得到该盒子的地址
	</li>
</ol>
<p>
	<em>（PPT演示</em><span><em>）</em></span> 
</p>
<p>
	注意上面第4条，这是我们理解数组的<strong>关键</strong>，这也是数组被如此广泛使用的原因：我们<strong>不</strong>是从数组中第1个元素开始，依次挨着数（找）第2个第3个……直到第n个，而是通过运算直接得到第n个数组元素的地址！所以，取数组中第2000个元素，并不会比取数组中第2个元素慢。
</p>
<p>
	<span></span><span style="font-size:12px;">PS：数组是一种</span><a href="http://17bang.ren/Article/199" target="_blank"><span style="font-size:12px;">数据结构</span></a><span></span> 
</p>
<h4>
	<br>
<span></span> 
</h4>
<h4>
	<span>声明和初始化</span> 
</h4>
<p>
	C#是一门强类型语言，所以在<strong>声明</strong>一个数组（变量）时必须指定其类型。数组中能存放元素类型决定了数组类型，如：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> students</span><span class="pun">;</span><span class="pln">    </span><span class="com">//注意这个方括号（[]），</span><span></span><span class="com">一个string类型数组</span></pre>
一经声明，该数组里的所有元素都只能是这种类型的数据。
<p>
	数组变量也需要被<strong>赋值</strong>后才能使用。
</p>
<p>
	<span></span>和我们之前学习的变量赋值使用“字面量”不同，数组的值需要<strong>初始化</strong>：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> students</span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[</span><span class="lit">3</span><span class="pun">];</span></pre>
<p>
	<span></span>这时候，数组仍然是“空”的。
</p>
<p>
	<strong>注意</strong>：两种“空”是不一样的
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> names</span><span class="pun">;</span><span class="pln">           </span><span class="com">//null：变量中没有存储任何东西</span><span class="pln">
    names </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span><span class="pln">    </span><span class="com">//empty：变量里已经“有”了一个数组，只是数组中每个元素都是空的</span></pre>
<p>
	<br>
</p>
<p>
	<span></span><span><em>断点演示：watch null和string[5]</em><span></span><br>
</span>
</p>
<p>
	<span>还可以在初始化的时候指定数组元素的值：</span> 
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> students </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="str">"阿泰"</span><span class="pun">,</span><span class="str">"Jimmy"</span><span class="pun">,</span><span class="str">"刘江平"</span><span class="pln"> </span><span class="pun">};</span></pre>
<p>
	上述写法还可以进一步简化：（语法糖，new的过程并未省略）
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> scores </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">98</span><span class="pun">,</span><span class="pln"> </span><span class="lit">78</span><span class="pun">,</span><span class="pln"> </span><span class="lit">85.5</span><span class="pln"> </span><span class="pun">};</span><span class="pln">  </span><span class="com">//仅在给数组赋值时使用</span></pre>
<p>
	<br>
</p>
<h4>
	赋值/取值
</h4>
<p>
	数组初始化之后，可以给它的元素赋值，或者获取
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    guess</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span></pre>
<strong> 注意</strong>：<br>
<ul>
	<li>
		<em><em>赋值/取值之前，数组必须已经被初始化！</em><br>
</em> 
	</li>
	<li>
		<em>下标从0开始，所以可以依次编号：0,1,2,3……</em> 
	</li>
	<li>
		<em>如果没有被赋值默认值</em> 
	</li>
</ul>
<h3>
	<br>
</h3>
<h3>
	越界错误
</h3>
<p>
	数组长度（Length）
</p>
<p>
	注意比较这两种错误
</p>
<ul>
	<li>
		编译时（compile）错误<br>
	</li>
	<li>
		运行时（runtime）错误
	</li>
</ul>
<p>
	异常：1、错误要“暴露”出来；2、养成看异常的习惯
</p>
<p>
	<br>
</p>
<h3>
	<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/arrays/multidimensional-arrays" target="_blank" rel="nofollow">多维（multi dimension）数组</a> 
</h3>
<pre class="prettyprint lang-cs prettyprinted"><span class="typ">int</span><span class="pun">[,]</span><span class="pln"> mda </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[</span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">];</span><span class="pln">
mda</span><span class="pun">[</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
mda</span><span class="pun">[</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">mda</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">);</span><span class="pln">&nbsp;&nbsp; </span><span class="com">//6</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">mda</span><span class="pun">.</span><span class="typ">Rank</span><span class="pun">);</span><span class="pln">&nbsp;&nbsp;   </span><span class="com">//2</span><span class="pln">
</span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">mda</span><span class="pun">.</span><span class="typ">GetLength</span><span class="pun">(</span><span class="lit">0</span><span class="pun">));</span><span class="pln">&nbsp; </span><span class="com">//2，一维的长度</span><span class="pln">

</span><span class="com">//也可以声明时赋值</span><span class="pln">
</span><span class="com">//int[,] mda = { { 1, 2, 3 }, { 4, 5, 6 } };&nbsp;</span></pre>
<p>
	<span>用于：图像处理/日历</span> 
</p>
<p>
	<br>
</p>
<h3>
	<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/arrays/jagged-arrays" target="_blank" rel="nofollow">交错（jagged）数组</a> 
</h3>
<p>
	又被称之为“数组的数组<span>”</span> 
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="typ">int</span><span class="pun">[][]</span><span class="pln"> students </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[</span><span class="lit">3</span><span class="pun">][];</span><span class="pln">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="com">//三个数组组成的数组</span><span class="pln">
students</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="pun">};</span><span class="pln">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="com">//数组的长度可以不一样（交错）</span><span class="pln">
students</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="lit">5</span><span class="pln"> </span><span class="pun">};</span><span class="pln">
students</span><span class="pun">[</span><span class="lit">2</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[</span><span class="lit">5</span><span class="pun">];</span><span class="pln">
</span><span class="com">//students[3] = new int[] { 20 };&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    //越界</span><span class="pln">

</span><span class="com">//也可以声明时赋值</span><span class="pln">
</span><span class="typ">int</span><span class="pun">[][]</span><span class="pln"> teachers </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="pun">},</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">int</span><span class="pun">[]</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="lit">5</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="pun">};</span></pre>
<p>
	<strong></strong> 
</p>
<p>
	<br>
</p>
<p>
	<strong>@想一想@：</strong>我们
</p>
<p>
	<br>
</p>
<p>
	<strong><strong>作业</strong>：</strong> 
</p>
<ol>
	<li>
		将源栈同学姓名/昵称分别：
		<ul>
			<li>
				按进栈时间装入一维数组，
			</li>
			<li>
				按座位装入二维数组，
			</li>
		</ul>
并输出共有多少名同学。
	</li>
</ol>
    </div>
 