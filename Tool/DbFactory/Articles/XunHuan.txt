
    <div style="clear:both; word-break:break-all; padding-top:20px;">
        <p>
	<span><span><span></span></span></span>循环又被称之为“迭代（iterat<span></span>e）”，是指计算机反复执行一段的过程，它和分支一起，构成了现代主流编程语言的流程核心。
</p>
<h3>
	<br>
</h3>
<h3>
	<span></span>while
</h3>
<p>
	<span>没有终止条件的循环叫做“<strong>死循环</strong>”，比如： </span> 
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"源栈欢迎你！"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span></pre>
<p>
	<span><span><span>和if语句一样，while后面的圆括号（()，循环条件）中只能是bool值变量，或者结果为bool值的表达式。</span></span></span>如果这个bool变量的值始终为true，循环就会一直进行，无休止的消耗计算机资源。
</p>
<p>
	所以在绝大部分情况下，我们都要注意避免出现死循环的情况。通常的办法是在循环体中改变循环条件的结果值，比如：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">&nbsp; &nbsp; </span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
&nbsp; &nbsp; </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">5</span><span class="pun">)</span><span class="pln">&nbsp; &nbsp; </span><span class="com">//随着循环的进行，i的值将会大于等于5</span><span class="pln">
&nbsp; &nbsp; </span><span class="pun">{</span><span class="pln">
&nbsp; &nbsp; &nbsp; &nbsp; i</span><span class="pun">++;</span><span class="pln">&nbsp; &nbsp; </span><span class="com">//循环体中，i的值不断增加</span><span class="pln">
&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"源栈欢迎你！"</span><span class="pun">);</span><span class="pln">
&nbsp; &nbsp; </span><span class="pun">}</span></pre>
<p>
	<strong>@想一想@</strong>：如何把"源栈欢迎你！"输出10遍？
</p>
<h4>
	<br>
</h4>
<h4>
	数组的遍历
</h4>
<p>
	通过循环，依次的获得数组中的每一个元素，这被称之为“遍历”：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="com">//Console.WriteLine(ids[0]);</span><span class="pln">
            </span><span class="com">//Console.WriteLine(ids[1]);</span><span class="pln">
            </span><span class="com">//......</span><span class="pln">
            </span><span class="com">//Console.WriteLine(ids[4]);</span><span class="pln">

            </span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
            </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">&lt;</span><span class="pln"> ids</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">               
                i</span><span class="pun">++;</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">ids</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
            </span><span class="pun">}</span></pre>
<p>
	<strong>@想一想@</strong>：上述代码的问题在哪里？如何修复？
</p>
<h3>
	<br>
</h3>
<h3>
	do...while
</h3>
<p>
	和while的唯一区别是：先把do{}中的代码执行一次之后，再进行while()条件判断。
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">do</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"learn..."</span><span class="pun">);</span><span class="pln">
        score </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">score</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">score </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">60</span><span class="pun">);</span></pre>
<p>
	<strong>@试一试@</strong>：将上述遍历数组的代码用while重写一遍
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">do</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">names</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
        i</span><span class="pun">--;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span></pre>
<h3>
	<br>
</h3>
<h3>
	for循环
</h3>
<pre class="prettyprint lang-cs prettyprinted"><span class="kwd">for</span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">    </span><span class="pun">--</span><span class="pln"> </span><span class="pun">起始步值</span><span class="pln">
    i</span><span class="pun">&lt;</span><span class="pln">length</span><span class="pun">;</span><span class="pln">   </span><span class="pun">--</span><span class="pln"> </span><span class="pun">跳出循环条件</span><span class="pln">
    i</span><span class="pun">++)</span><span class="pln">        </span><span class="pun">--</span><span class="pln"> </span><span class="pun">步长</span></pre>
<ul>
	<li>
		i：计数器<br>
	</li>
	<li>
		int i = 0：起始状态
	</li>
	<li>
		i&lt;length：结束条件
	</li>
	<li>
		i++：步长为1，每循环一次i值加1
	</li>
</ul>
<h4>
	如何选择？
</h4>
<p>
	原则：尽量使用for循环，在不确定<span>（或不容易获取）</span>循环次数的时候，使用while循环
</p>
<span>因为：for循环的的写法更“紧凑”，不需要“<span>额外的</span>”累加器（i）变量<br>
</span> 
<p>
	<span><strong>注意</strong>：for循序中 i 的<em>作用域</em><a href="http://17bang.ren/Article/284" target="_blank"><em>（复习）</em></a>，是在for循环体中，和我们之前讲的规则略有不同<br>
</span> 
</p>
<p>
	<span><em>演示：略</em></span> 
</p>
<h3>
	<br>
</h3>
<h3>
	示例一：遍历查找
</h3>
<p>
	在数组中查找某个值，比如说 int[]{8,7,9,10,2,4,5} 中找到10。
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">   </span><span class="typ">int</span><span class="pun">[]</span><span class="pln"> studentIds </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="lit">8</span><span class="pun">,</span><span class="pln"> </span><span class="lit">7</span><span class="pun">,</span><span class="pln"> </span><span class="lit">9</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> </span><span class="lit">5</span><span class="pln"> </span><span class="pun">};</span></pre>
<p>
	思路：把数组中的元素挨个挨个的拎出来，一个一个的和10进行比较。
</p>
<p>
	这就需要综合使用循环和分支：
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> studentIds</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">studentIds</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">10</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span></pre>
<p>
	<strong>@想一想@</strong>：找到了，怎么办？
</p>
<p>
	<strong>注意：</strong>作为一个<strong>专业</strong>（professional）的程序员，源栈的同学们，这时候一定要<strong>注意</strong>：
</p>
<ul>
	<li>
		根据用户需求编程，而不是根据自己的想法编程 —— 这就是业余玩家和<strong>专业</strong>人员的区别。
	</li>
	<li>
		尤其是在用户需求不明的情况下，千万<strong>不</strong>要“想当然”的自己把需求给定下来，什么“肯定”“显然”……
	</li>
	<li>
		要<strong>问</strong>！问清楚再做！！！<br>
	</li>
</ul>
<p>
	明确模糊的需求：
</p>
<ol>
	<li>
		找到后输出：找到了，在数组中第n位
	</li>
	<li>
		没找到输出：没找到
	</li>
	<li>
		完了吗？还有没有其他模糊的需求？
	</li>
</ol>
<p>
	<em>演示，常见错误：</em> 
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">$</span><span class="str">"找到了，在数组中第 i 位"</span><span class="pun">);</span></pre>
<p>
	<strong>@想一想@</strong>：正确的写法是什么？
</p>
<h4>
	<br>
</h4>
<h4>
	没找到
</h4>
能不能这样？
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> studentIds</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">studentIds</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">10</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">$</span><span class="str">"找到了，在数组中第{(i + 1)}位"</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
                </span><span class="kwd">else</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"没找到"</span><span class="pun">);</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span></pre>
<p>
	<em>演示：错误效果</em> 
</p>
<p>
	问题的关键：只有当所有的元素都查找了一遍都没找到，才算没找到。肿么办？
</p>
<ul>
	<li>
		方案（一）引入新的bool值变量：
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    bool found </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> studentIds</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">studentIds</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">100</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">$</span><span class="str">"找到了，在数组中第{(i + 1)}位"</span><span class="pun">);</span><span class="pln">
            found </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">  </span><span class="com">//标记已经找到</span><span class="pln">
        </span><span class="pun">}</span><span class="com">//else continue</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">found</span><span class="pun">)</span><span class="pln">  </span><span class="com">//在循环外检查，不要写成 found == false</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"没找到"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="com">/*else nothing*/</span></pre>
这种方案的问题是引入了一个额外的变量。<br>
	</li>
	<li>
		方案（二）当检查到最后一个元素时……
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> studentIds</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
    </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">studentIds</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">10</span><span class="pun">)</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">$</span><span class="str">"找到了，在数组中第{(i + 1)}位"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">else</span><span class="pln">
        </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">==</span><span class="pln"> studentIds</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">)</span><span class="pln">    </span><span class="com">//此处有bug哟，^_^</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="str">"没找到"</span><span class="pun">);</span><span class="pln">
            </span><span class="pun">}</span><span class="com">/*else continue*/</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span></pre>
	</li>
</ul>
<h4>
	<br>
</h4>
<h4>
	条件断点调试
</h4>
<p>
	在循环的调试中，
</p>
<p>
	和watch：
</p>
<p>
	<img title="" class="img-responsive" alt="" src="http://17bang.ren/Images/Attachment/2019/11/12/e25ce773-49ca-457a-a002-f5c0ebeaf881.png" data-original-title="" zyf-img=""> 
</p>
<p>
	<br>
</p>
<h3>
	break和continue
</h3>
<p>
	<span>在循环体中，还可以使用分支。比如，我们可以</span> 
</p>
<p>
	跳出当前一级的循环。
</p>
<pre class="prettyprint lang-cs prettyprinted"><span class="pln">            </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> numbers</span><span class="pun">.</span><span class="typ">Length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln">
            </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">numbers</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> x</span><span class="pun">)</span><span class="pln">
                </span><span class="pun">{</span><span class="pln">
                    </span><span class="typ">Console</span><span class="pun">.</span><span class="typ">WriteLine</span><span class="pun">(</span><span class="pln">i</span><span class="pun">);</span><span class="pln">
                    </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">   </span><span class="com">//找到就跳出循环</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
                </span><span class="com">//else: do nothing</span><span class="pln">
            </span><span class="pun">}</span></pre>
<p>
	冒泡排序
</p>
<p>
	<br>
</p>
<p>
	二分查找
</p>
<p>
	<br>
</p>
<p>
	<br>
</p>
<p>
	<span></span> 
</p>
<p>
	<strong>作业</strong>：
</p>
<ol>
	<li>
		分别用for循环和while循环输出：1,2,3,4,5 和 1,3,5,7,9<span></span>
	</li>
	<li>
		用for循环输出存储在一维/二维数组里的源栈所有同学姓名/昵称<br>
	</li>
	<li>
		让电脑计算并输出：99+97+95+93+...+1的值
	</li>
	<li>
		将源栈同学的成绩存入一个double数组中，用循环找到最高分和最低分
	</li>
	<li>
		找到100以内的所有质数（只能被1和它自己整除的数）
	</li>
	<li>
		<p>
			生成一个元素（值随机）从小到大排列的数组
		</p>
		<p>
			<img title="" class="img-responsive" alt="" src="http://17bang.ren/Images/Attachment/2019/2/22/bab50b5a-72b0-47c8-9cde-32a914985257.png" data-original-title="" zyf-img=""> 
		</p>
	</li>
	<li>
		设立并显示一个多维数组的值，元素值等于下标之和。Console.Write()<br>
<img title="" class="img-responsive" alt="" src="http://17bang.ren/Images/Attachment/2019/2/22/1a0478b6-4c49-41f9-acfe-ae01760e2f3c.png" data-original-title="" zyf-img=""> 
	</li>
</ol>
<br>
<br>
<br>
    </div>
