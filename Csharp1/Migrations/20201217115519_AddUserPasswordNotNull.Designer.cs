// <auto-generated />
using System;
using CSharplearn.OO.Entity_FrameWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharplearn.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20201217115519_AddUserPasswordNotNull")]
    partial class AddUserPasswordNotNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CSharplearn.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BCredit")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvitedById")
                        .HasColumnType("int");

                    b.Property<int>("InvitedCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reward")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvitedById");

                    b.ToTable("Register");
                });

            modelBuilder.Entity("CSharplearn.User", b =>
                {
                    b.HasOne("CSharplearn.User", "InvitedBy")
                        .WithMany()
                        .HasForeignKey("InvitedById");

                    b.Navigation("InvitedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
