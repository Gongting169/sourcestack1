9月1号准备的面试题目：
1、SQL是什么？  结构化查询语言   与关系型数据库进行交流的语言。三大主流数据库有哪些？ mysql   orical   sql server 
2、当用户进行访问数据库的时候，他们是怎么进行交互的？ 用SQL语句

 2020年9月3号的面试题目：
 1、能在两种不兼容的数据类型之间进行数据转换吗？ 举个例子？ 不能 986INT转换成BIGINT还是986， int转换成datetime还是986吗？ 
 2、怎样去理解批处理？ 若干条命令进行同时整批处理，有些可以进行一批处理，
 3、如何理解使用SQL时用go。
 4、数据库我们一般常用的有哪些类型： 文本数据库、数值、（整数、小数（decimal/numeric、float、real））、null值（空）、日期类型（date、time、datetime）、真假（1/0）
 5、nvarchar和varchar有什么区别？ 使用Unicode编码 非Unicode编码


 2020年9月4号的面试题目：
 1、表内容中的增删查改中的增加的文本类数据如何避免一些错误？表名中列名与VALUE的值必须一一对应吗？ 文本数据是Unicode编码的：N'文本数据'  不一定 要看他的数据类型 顺序混乱可以，数据类型一一对应就可以了
 2、delete和truncate有什么区别？ 一个删除表里面的所有行，一个删除整个所有表包括表结构。
 3、在update的过程，有什么需要我们注意的？ 进行备份
 4、在SQL server中有哪些运算符？ 赋值运算、算术运算、文本运算、逻辑、比较运算、
 5、如何判断一个值是否为NULL值？

 2020年9月6号的面试题目：
 1、为什么需要约束？ 是为了数据的完整性，完整性：防止用户的出错 保证用户的输入符合我的输入数据类型  
 2、


 2020年9月7号的模拟面试题目：
 1、select一个别名,会更改数据本身吗？ 不会，知识相当于他的另外一个名字。
 2、是怎么理解orderby中出现两个不同的列的升序和降序问题的？ SELECT Id, Age, Score FROM Student ORDER BY Age ASC, Score DESC
 3、having和where的区别是什么?HAVING是在GROUP的结果中过滤，而WHERE是在GROUP之前就过滤
 4、select表复制复制那些属性? 属性类型、IDENTITY标记、NOT NULL约束等 但不能复制主外键关系
 5、哪些约束是可以暂时关闭约束检查？ check(自定义约束)和外键约束，关闭约束我们应该注意到什么？ 先关闭约束检查时，使用打开约束。

 2020年9月8号：
 1、什么是数据结构？ 如何组织、存储数据的逻辑形式
 2、什么是堆？ 是散乱无序的数据结构
 3、什么是聚集索引？ 聚集索引的叶子节点直接存放的就是行数据。和非聚集索引有什么区别？ 一个存放的是行数据，一个存放的是找到行数据的ID。
 4、全表扫描是什么？ 和iam 又是什么关系？ 如果一张表没有建立聚集索引，SQL SERVER会为每一张表建立一个索引分配映射（index allocation map），由iam依次记录着这张表所有页的信息，iam记录的是页里面存放数据的地址信息。 列如：p1-s1。
 当使用select语句进行查询时，SQL SERVER会以iam为基础，在iam记录的所有页上依次查找，直到查找出符合条件的数据，这就是全表扫描。 进行全表扫描的时候，会以iam为基础来进行查找。
 5、为什么需要非聚集索引？
 6、索引是干嘛用的？ 为了提高查询的速度和性能。是一个帮助我们快速查询的工具。SQL server会使用一列或多列的数据来构建一个索引列，当进行select查询的时候，可以先检查索引，通过索引找到索引列，能够取出完整的行数据了。
 7、当我们插入一行的时候，行数据究竟放置在哪里？ 是不是由这个数据的索引值决定的？  是怎么实现行数据位置存放的？ 页里面  
 8、什么是非聚集索引？非聚集索引的叶子节点中存放的不是实际行数据，而是存放行数据的ID，可以通过这个ID找到行数据。指针指向的是什么？如果Student表上已经在Id列建立了聚集索引，指针就记录这个Id（聚集索引的键值）即可；
如果Student表上还没有任何聚集索引，指针只能记录SQL Server为数据行建立的由文件Id、页Id和槽Id（FileID:PageId:SlotId）组成的RID（Row Id）。（也就是IAM里记录的RID？）
9、rid就是iam里面的数据存放的那一页那一个槽的位置？
10、为什么聚集索引比非聚集快?实际上当我们使用非聚集索引进行查找时，并不能直接的获取目标行数据。我们还得再根据其叶子节点中存储的“指针”，再在IAM或者聚集索引中进行查找，最终才能获得行数据。这就是“聚集索引比非聚集索引快”的原因


 2020年9月9号的面试题目：
1、建立索引应该注意哪些？ 确定索引的种类 聚集还是非聚集 非唯一还是唯一  命名规范 、索引建立在那个列上？
2、主键是唯一聚集索引吗？ 不一定 建立主键约束，如果表上没有建立聚集索引，sql SERVER 会自动创建一个聚集唯一索引  有聚集索引的话，就会自动建立一个非聚集唯一索引
3、执行计划的作用? 对查询进行优化
4、rid是什么？是iam里面所记录的数据的位置信息吗？  rid是由文件ID、页ID、槽ID 三者组成的 是
5、rid和iam分别是什么？ 他们之间有关联吗？ rid是由文件ID、页ID、槽ID 三者组成的 iam是由sqlserver自动生成的索引分配映射，iam记录的是表里面所有页的信息，依次记录的是数据存放的位置信息，rid就是iam里面的rid。
6、唯一约束和唯一索引有什么区别？ 唯一约束本质上是依赖唯一索引的。 唯一约束是在插入数据的时候对数据进行唯一检查，只能通过索引快速找到数据，删除唯一约束同时也会删除约束所依赖的索引

2020年9月10号的面试题目：
1、如果表上有聚集索引，sql server一定会进行聚集索引查找数据吗？ 为什么？
2、主外键一定是在两张表中产生的吗？ 不一定  比如 进行注册的时候，需要一个邀请人，被谁邀请就是一个外键列，外键列不一定是在主表上的。 
3、怎么样合理规划索引？ 

2020年9月13号的面试题目：
1、什么是数据的完整性？ 包含那三大完整性？ 分别是什么意思？ sql数据库要保证数据的完整性，sql server要保证数据正确且符合逻辑（通常使用约束来实现） 域完整性：限制每一列的数据 
实体完整性：要求某一列或多列上每一行的数据都是唯一的，每一行数据都有一个唯一标识符，以保证不能有完全相等的两行   参照完整性(主从表一致)：表与表（关联表）之间的数据是一致的，使用外键约束实现。
2、解释一下三大范式？ 第一范式：关系中每个属性都不可再分  第二范式：在第一范式的基础上，消除非主属性对码的函数依赖  第三范式：在第二范式的基础上，消除非主属性对码的传递函数依赖。
4、冗余的利弊：弊：会占磁盘空间，数据会出现重复，会破坏数据的一致性。
三大范式是消除不必要的重复，就称为：冗余  遵循三大范式的标准就会出现多张表联合查询，降低了查询性能，要去多张表上查询数据，
因为某些特定原因（通常是提高性能），宁愿从单表直接获取数据，也不愿多表联合查询，就是平常说的“以空间换时间”，
5、使用三大范式：是为了消除冗余，保证数据的一致性。 ，遵循的是多表联合查询，就可以使用第二范式。

2020年9月14号的面试题目
1、内连接和外连接有什么区别？  内连接，左表与右表有一行没有相对应的行数据，这一行数据就会被省略掉，不会出现在内连接表中  
外连接的话，左表与右表有一行没有相对应的行数据，如果左连接，那么右表这面会用null来补充，同理右连接也是一样的，不会丢失掉数据。
2、

2020年9月18号：
1、使用表表达式的注意事项： 每一列都必须要列名，列名必须唯一，不保证排序，不能使用 order by
2、使用视图的作用是什么？1、通常是为了整理表间的复杂关系，为了给用户呈现清新、直观的数据。
3、介绍一下标准视图？数据库中存储的视图其实就是创建的select语句，看到的行和列都是来自于创建视图的基表。
4、视图选项的作用？绑定视图和基表之间的结构，被视图引用的列，都不能更改和删除。加密
5、索引视图？ 数据库中存储的视图是行数据
6、视图和表表达式的区别？ 视图创建时可以指定列名，是永久性的，除非显示的删除，可以基于多表联合的创建，表表达式：派生表查询结果只能使用一次，
CTE的子查询结果可以多次重复利用，还可以一次定义多个表，也是只能使用一次，声明一次，使用一次，一批处理完之后就不能再使用了

2020年9月20号：
1、局部临时表和全局临时表的区别？ 局部临时表：表名前有一个# ，只能在当前查询窗口可见   全局临时表： 表名前面有两个##，在所有会话都可见
2、解释一下异常和回滚 异常就是 sql语句本身是没有错误的，正常情况下能够顺利执行，产生的原因是无法预料到的外部结果。
3、有哪些排名函数？ROW NUMBER  RANK ORDER by后面跟有相等的值，会占有名次 DENSE NUMBER orderby 中两行值相等，相等值不会占有名次。
4、表变量是一定存储在内存中的吗？ 表变量是存放在tempdb中的，不一定，因为当内存足够的时候，存放表变量的页可以存放在缓存中。
5、你是怎么样认识tempdb的？ 是sqlserver自行维护的一个数据库，存储用户的临时表和表变量，还可以使用它完成许多系统工作，合理使用临时表可以提高系统性能。
6、事务：配合sqlserver的异常处理机制，确保：要执行全都执行，不执行全都不执行 异常如何处理： 先进行日志备份、也可以进行向系统管理员提交信息。

2020年9月21号：
1、事务的特征有哪些并解释一下？ acid： 原子性：事务作为一个整体都不可再分，要么就全都执行成功，要么全都不执行 隔离性：正在执行的事务不能被其他的事务所干扰。
一致性：事务的运行不能破坏数据的一致性 比如约束等  永久性：一旦改变就会是永久的
2、解释一下事务嵌套和save。在事务的基础之上在嵌套一个事务。save只是在事务中开启了一个保存点
3、什么是事务，配合哪些语句使用？并解释一下其意思？可以让某个数据经过修改之后，通过回滚使他恢复到原来的样子，要么全都执行成功，要么都不执行  begintry  +语句 commit
end try  begin catch rollback  end catch
4、事务的嵌套是怎么解决的？会回滚到最外层的事务，也就是最开始的事务， 可以设置一个事务点，只让他回滚到这个事务点上
5、事务隔离级别有哪些？ read  uncommit 可以避免脏读   read commit


2020年9月22号：
1、解释一下死锁是怎么造成的？
2、事务隔离级别有哪些？都是分别怎么解决对应的问题的？
3、解释一下u锁、s锁、x锁分别代表的意义是什么？
4、他们之间的兼容性是怎么样的？
5、事务隔离级别是锁之间是怎么实现的？ 是依靠粒度来实现的，粒度小，并发高，消耗资源，力度大，消耗资源少  降低并发度


2020年9月24号：
1、编程预言的特点有哪些？ 声明变量和赋值、分支、循环、函数 局部变量：是以@开头的，局部变量的作用域位于一个批处理语句当中 
全局变量：是以@@开头的，是不受批处理约束的，可以再任何地方使用，是由SqlServer自行定义的
2、有哪些系统函数？  聚合、数值、文本、日期、
3、文本函数可以分为哪些？
4、提高事务隔离级别能避免死锁的发生吗？
5、函数的作用是： 能够进行重用

2020年9月25号的面试题目：
1、函数可以分为哪些函数？ 他们的特点是什么？  函数可以分为：标量函数、单行表值函数、多行表值函数、系统函数（聚合、文本、日期、数值）
2、存储过程和函数有什么区别？ 1、函数能干的事存储过程都能做 2、函数必须要有返回值，不能对数据进行修改 3、能对数据进行修改
3、存储过程的优缺点有哪些？ 优点：1、事先编译，所以执行的更快 2、只需要向数据库传递存储过程名称和参数，花费流量更少。 缺点：1、可读性差、难以调试、不能在数据库之间进行迁移上
4、日期可以分为：dateadd增加、datediff计算时间差，n可以为负数、datepart 截取
5、T_SQL是一种强类型的语言，不兼容类型的数据之间不能进行运算，兼容类型的数据进行运算，先进行类型转换，可以用cast/convert来进行显示转换
6、触发器是什么？ 是一种特殊的存储过程
7、sql语言有哪四大类?dml 数据操作语言（对行数的增删查改，insert/update/delete/）ddl 数据定义语言(就是通常所用的drop、alter、create
传统上ddl不受事务的控制，truncate属于ddl,所以不能回滚)  tcl 事务控制语言 dcl 数据控制语言 
8、memcached  的命令格式是什么样的？ set  key  flags  exptime bytes noreply  存储 键值对 标注 内容 多少字节
9、memcached 的特点是什么？免费开源 分布式部署，通常是部署在Linux集群上  内存对象是数据库，数据存放在内存中，所以读写非常快  存储以键值对的形式存储

2020年10月6号的面试题目：
1、CRTL F5 和f5的区别？
3、debug和release的区别
5、什么是编译？ 把其他的高级语言或者自然语言编译成目标语言或者是二进制 什么是编码？把文本或者是字符，按照一种标准来进行转换，转成机器能读懂的机器码
6、强类型语言有什么特点：申明变量要指明数据类型，只能这种类型的数据才能符合要求，不能放其他类型的数据
7、什么是关键字？ 关键字是由系统保留，具有特定含义的字母，开发人员不能把它用作变量名。

2020年10月8号的面试题目：
1、什么是运算符优先级？ 一个表达式里有许多运算符，会按照一定的先后顺序来进行运算
2、逻辑运算与位运算的区别？逻辑运算是针对bool值进行逻辑运算的，位运算主要是针对二进制进行运算的，按位或和按位&可以应用于整数和bool值
3、短路运算？ 一旦得到结果，就不会进行后面的运算
4、比较运算： 是所有的数据类型都可以比较吗? 不是，比如：字符串和整数类型不能比较；要比较的话，用convert.TOINT32()，先进行转换，parse.int()

2020年10月9号的面试题目:
3、重构有什么作用？ 封装变化（可维护，方便维护），尽量减少外部的影响，在不改变原有代码运行结果的情况下，改变样式，对代码进行优化调整，解除耦合（删除代码之间的不可替代性，避免牵一发而动全身）
4、数组有什么特点？把变量看成是一个盒子，可以把数组想象成一排连续的盒子，里面放置数据（元素），这个数组的地址是连续的，声明一个数组的时候必须指定其类型，数组只能存放该类型的数据。
要得到里面的元素，就必须直到第一个盒子的地址，第n个元素，从第一个加n就能得到第n个元素的地址。
5、链表有什么特点？ 在堆里面寻找数据，像一个链条一样的绳子把散乱无序的数据连接起来，通过一个数据可以找到另一个数据
6、什么是数据结构? 什么是堆？ 是将数据如何存储、组织的逻辑形式 散乱无序的数据结构
7、数组有一维数组和多位数组、交错数组，交错数组的长度可以不一样

2020年10月11号的面试题目：
1、FOR循环和while循环之间有区别没有？ 该怎么选择呢？ 作用域：while循环是上一个花括号到下一个花括号结束。
for循环作用于当前的花括号的循环体。 for循环要紧凑一点，如果知道循环的次数，选择的是for循环，否则就选择while循环
2、do循环相比其他循环有什么特点？ do循环先把循环体执行一遍，然后在进行条件判断 while和for循环先条件判断之后，在执行循环体就
3、什么是迭代? 是指计算机反复执行的一段代码，和分支组合一起使用，是现代编程语言的流程核心
4、什么是遍历? 通过循环，依次获得数组中的每一个元素

2020年10月14号的面试题目：
1、break和return的区别？ break：会直接跳出循环体，而return会跳出函数。
2、复杂度可以分为哪些？可以举两个例子说明复杂吗？ 时间复杂度和空间复杂度： 时间复杂度也就是这个循环体循环的次数多少，空间复杂度也就是占用的空间的多少。
有一些算法的复杂度不同，可以分为三种：有指数级的，也就是复杂度比较高的（多重和嵌套循环），线性级，也就是复杂度一般的（单个循环），对数级复杂度相对较低（二分查找）
3、数据结构是算法的基础，算法是基于数据结构的 数据结构和算法之间有什么关系？
4、方法的调用是在哪里调用的？ 在哪里声明？ main方法里调用，program里声明
5、f11进入方法体内部和f10在方法体内部中设置断点有什么区别？ 从main方法直接转到声明的方法体，f10在内部设置断点，可以查看他的运行过程和结果。

2020年10月16号的面试题目：
1、out和ref的区别是什么? ref进行传入参数之前需要赋值，而out参数不用，ref是为了改变传入参数，out是为了获得。
2、C#默认的传递方式是什么？还有什么其他的传递方式？ 有什么特点？ 是值传递：传递的是变量的值，引用传递：传递的是变量本身，需要用ref和out来标记，
传入变量的值，调用的时候输出的还是原来的值，引用传递：输入的参数变量，就会进行一定的运算，列如：位置交换。
3、什么是重载？方法名是不能重复现的，但是在重载中，可以使用同一个方法名，配以不同的参数组合，来使用这些方法。  参数名不同，返回值不同
4、可选参数有什么特点？ 必须放置在必须参数后面，可选参数的默认值必须是编译时确定的，可选和不可选参数之间不能构成重载。调用的时候可以选择写或者不写
5、parameter在什么情况下使用？ 当参数是数组的时候，可以类型前面加个params,可以像向数组传递元素了。


2020年10月23号的面试题目：
1、引用类型和值类型有什么区别？值类型有什么好处？读取的速度快，
2、为什么需要构造函数？
3、为什么需要栈？ 是一种数据结构，因为函数的嵌套调用。
4、关键字this有什么作用？ 
5、readonly和constant有什么区别？  共同点：他们都是只读不进行更改， 不同点：readonly是只读，声明之后，可以延迟到construtor（构造函数）之后赋值，
constant常量一旦声明之后，就必须赋值，

2020年10月24号的面试题目：
1、类的字段都应该是私有的，都必须进行封装，属性是对字段的封装。属性本质上是方法。方法是对象的动作，属性是对象的状态。可以像使用字段一样使用属性，
如果要在属性中为取值添加逻辑，需要在get中添加代码  封装就是屏蔽内部实现，在set中实现。
2、什么是内存泄漏？新建立的对象没有释放，只是不断的去占有内存，没有进行回收，清除数据，以便下次使用。
3、get和set有什么区别？一个获取值，一个是去赋值  只有get没有set 这样属性就只读不能写，只有set没有get 这样属性就只写不能读
4、privateset 和set有什么区别没有？没有太大的区别，privateset 只能在自己的内部中设定，set能在外部设定
5、在自动属性中，我们能添加任何逻辑条件吗？不能，不能在get和set中添加任何逻辑，要添加，就要使用配合字段和属性
匿名类：其变量类型是var，所有属性只能是只读的，拥有相同属性的匿名类会被当做同一个类
索引器通常用于封装具有多个元素的数组，使用this
起构函数和构造函数有什么区别? 起构函数是在对象被销毁的时候调用，构造函数是在创建对象是被调用，无参，不需要显示声明，不需要在内部添加任何逻辑，起构函数是.net来进行自动调用的
强制回收的话,用gc.collect();

2020年10月26号的面试题目：
1、除了索引器，构造函数、字段、方法、属性即可以是实例的，也可以是静态的，静态构造函数不能被开发人员调用
，由.net运行在使用类之前,自动调用且仅一次，访问修饰符和参数对静态构造函数没有意义。给静态成员赋一个初始值。
2、静态类不能被实例化，其中只能有静态成员，不能有实例成员，但实例类中可以有静态成员，也就是实例类可以访问静态成员，静态成员不能访问实例类
静态成员是属于类的（公有），实例成员是属于每一个具体的对象的（独有）静态成员是属于类的，类不会被销毁，所以常驻内存的；一个类就是一个类，所以类的静态成员也是唯一的；
实例成员是属于对象的，而对象是new出来的，同一个类可以new出若干个对象，这些对象是各自独立的，所以他们的成员也是各自独立的。
3、能实例就不要静态，因为静态代表的是类，不是对象，
4、引入面向对象，是为了“分门别类”的归纳管理数量众多的方法，更重要的是，我们可以通过对象（而不是类），进一步的优化我们的代码。
5、静态方法：好的方法特点是：参数个数要少，实例方法的典型应用：尽可能用对象自有的数据来完成方法，而不是依赖于方法的参数传递。
一个对象的方法可以完全依赖于对象本身完成其功能，不带一个参数，这就是一种理想的面向对象的设计
6、面对实例和静态应该怎么选择？
7、说一说静态类和实例类的优缺点： 缺点：不能实例化，类是不会被销毁的，常驻内存，一个类就是一个类，类的静态成员也是唯一的  实例：
优点：实例：能面向对象，引入面向对象，是为了“分门别类”的归纳管理数量众多的方法，对象是new出来的，同一个类可以new出若干个对象
，可以通过对象，进一步优化我们的代码，静态：整理代码，实现代码的组织和重用，起到一定的封装作用。

2020年10月27号的面试题目：
1、实现继承的语法 ：子类继承父类，就可以使用父类的成员。继承发生在类与类之间，而不是对象之间，父类对象的任何数据都不会传递给子类，子类继承的是父类的模板
一个父类可以有多个子类，一个子类只能有一个父类。C#不支持多重继承。
2、静态类不能被继承，但实例类中的静态成员是可以被继承的
3、实例化一个子类，需要调用它所有的父类构造函数，因为要能够使用继承自父类的成员，必须调用一次父类的构造函数。
任何类都一样，要想使用这个类的成员，就必须先对这个类实例化一次，实例化就必须通过构造函数调用来实现。如果父类只有一个无参构造函数，.net运行时会默认调用这个无参构造函数
如果父类没有无参构造函数，那需要在子类的构造函数中指定具体调用父类的那一个构造函数。
4、子类可以访问父类的成员，父类有私有的成员，子类就不能访问 protected 还可以internal联合使用，当父类和子类不在同一个项目中使用
5、sealed;让某个类不能在被继承，父类装子类，实际上，这是一个父类变量引用指向一个子类对象，变量能够调用（。出来）什么，是由声明这个变量的类型决定的，而不是变量所引用的对象类型决定的
6、is有什么语法特点？类型判断是以运行时（即以所指向对象）为准，子类可以是自己、父类类型，父类对象不能是子类类型。
如果变量和类型之间没有继承关系，结果必然是false，变量为null（没有对象引用）也是false
7、讲一讲继承的滥用？ 继承的滥用是基于重用的逻辑，继承不是为了代码的重用，是为了多态，真正实现重用的，就是方法和组合（一个对象包含着若干个对象，或者若干对象组合成一个对象）

2020年10月29日的面试题目：
1、什么是多态？ 同一个变量，同一个方法，可以得到不同的结果。具体是怎么实现的？ 在父类中使用virtual关键字，在子类中使用override关键字，然后进行调用，就会得出不同的结果。
2、多态有什么语法特点？ 使用new关键字，就是子类和父类使用相同的方法时，在继承类中添加。父类装子类：使用的是谁的方法，看变量的类型。virtual：是在父类中添加，override是在子类中添加。
可以使用sealed，然后就不能被子类在override了。
3、多态的作用是什么？ 可以减少代码量，减少嵌套，可方便维护。让我们抽象的（面向对象的）设计实现成为可能。不考虑具体的实现细节，而是考虑对象的组织调用。面向对象的核心是代码的组织管理。
4、说一说你对抽象类的认识：由abstract修饰的类，抽象方法放置在抽象类中。抽象类不能实例化（还有静态的也不能被实例化），在抽象类里还可以声明其他的类成员，抽象方法是没有方法体的，
抽象类是可以有自己的方法，构造函数是为了给子类使用的。抽象方法所在的类，这个类的子类都要通过override来实现抽象类里面所有的方法，在override方法体内，不能通过base调用父类的抽象方法。
5、说说你对接口的认识：在接口内部只能声明方法和属性，不允许有字段和访问修饰符和方法体，也不能有其他的访问修饰符。接口一样不能被实例化，所以也不能有构造函数
接口也只可以继承接口，接口可以多重继承，子类要实现一个接口，就和抽象方法一样，必须实现接口的全部成员（接口继承的所有接口里面的成员）

